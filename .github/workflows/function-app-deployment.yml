# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App

on:
    pull_request:
      types: [closed]
      branches:
        - master
    workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.10' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  fetch-new-tag:
    # Workflow will be triggered only when these conditions are met
    if: ${{ (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev') || (github.event.pull_request.merged == true && github.ref == 'refs/heads/master') }}
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.get-new-tag.outputs.NEW_TAG }}
    steps:
      - name : Checkout Repository
        uses : actions/checkout@v4

        # Update the TAG_VERSION in variables to change the version (Example: from 1.00 -> 2.00)
      - name : Calculate New Tag
        id : get-new-tag
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            PREFIX="Prod_"
            tag_version=$(printf "%.2f" ${{vars.PRD_TAG_VERSION}})
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            PREFIX="Dev_"
            tag_version=$(printf "%.2f" ${{vars.NPRD_TAG_VERSION}})
          fi

          #### Check if the tag is already present ####
          git fetch --unshallow --tags
          echo "Searching for tags like ${PREFIX}${tag_version}"
          CHECK_TAG=$(git tag -l "${PREFIX}${tag_version}")

          if [ -z "$CHECK_TAG" ]; then
            NEW_TAG=$tag_version
          else
            echo "Searching for tags starting with ${PREFIX}*"
            
            LATEST_TAG=$(git tag -l "${PREFIX}"* | sort -V | tail -n 1)
            NUMERIC_PART=$(echo "$LATEST_TAG" | sed "s/${PREFIX}//")
            IFS='.' read -r INTEGER FRACTION <<< "$NUMERIC_PART"

            NEW_FRAC=$(printf "%02d" $((10#$FRACTION + 1)))
            NEW_TAG="${INTEGER}.${NEW_FRAC}"
          fi

          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "Next tag will be: $NEW_TAG"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}

    steps:
      - name : Get Publish Profile
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE=${{secrets.PRD_AZURE_FUNCTIONAPP_PUBLISH_PROFILE}}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "AZURE_FUNCTIONAPP_PUBLISH_PROFILE=${{secrets.NPRD_AZURE_FUNCTIONAPP_PUBLISH_PROFILE}}" >> $GITHUB_ENV
          fi

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'dfs-aass-ai-nprd-brand-detection'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
          publish-profile: ${{ env.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  create-new-tag:
    runs-on: ubuntu-latest
    needs: [fetch-new-tag, build, deploy]
    steps:
      - name : Checkout Repository
        uses : actions/checkout@v4

      - name : Set up Git User
        run: |
          git config user.name ${{github.actor}}
          git config user.email "${{github.actor_id}}+${{github.actor}}@users.noreply.github.com"

      - name: Create tag
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            PREFIX="Prod_"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            PREFIX="Dev_"
          fi

          VERSION_NUMBER=${{needs.fetch-new-tag.outputs.new-tag}}
          TAG_NAME="${PREFIX}${VERSION_NUMBER}"

          git tag -a "${TAG_NAME}" -m "Version ${VERSION_NUMBER}"
          git push origin "${TAG_NAME}"